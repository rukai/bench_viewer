name: publish to github pages

on:
  push:
    branches: [ main ]

# Cancel already running jobs
concurrency:
  group: publish_to_pages_${{ github.head_ref }}
  cancel-in-progress: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          # By default only linux has a release job.
          # This is to keep within the 5GB cache limit as rust can use a lot of space!
          # There are also more limits here but I don't think there is much risk of hitting them: https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#usage-limits
          #
          # If you don't use much of the cache feel free to add more release jobs.
          # If you do hit the cache and there are jobs that are not important for your project remove them or disable caching for them.
          - name: Linux Publish
            runner: ubuntu-latest

          # One day we should support these as well.
          # Maybe we can have a final ga job that combines artifacts from the other jobs.
          # Or maybe we just need to be able to append to the pages without overwriting the whole thing.
          #
          #- name: Windows Publish
          #  runner: windows-latest
          #- name: MacOS Publish
          #  runner: macos-latest
    environment:
      name: github-pages
      url: ${{ steps.setup_pages.outputs.base_url }}
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    steps:
    - uses: actions/checkout@v2
    - uses: Swatinem/rust-cache@v1
      with:
        # rust-cache already handles all the sane defaults for caching rust builds.
        # However because we are running separate debug/release builds in parallel,
        # we also need to add Debug or Release to the key so that a separate cache is used.
        # Otherwise only the last build to finish would get saved to the cache.
        key: ${{ matrix.name }}
    - name: Setup Pages
      uses: actions/configure-pages@v2
      id: setup_pages
    - name: Get initial page state
      run: |
        mkdir -p ussal-bencher/bench_ci_web_root
        cd ussal-bencher/bench_ci_web_root
        # Disable until we have a vaguely stable format
        #wget ${{ steps.setup_pages.outputs.base_url }}/bench_history.cbor
      continue-on-error: true
    - name: Generate pages
      run: |
        cd ussal-bencher
        cargo run --release
    - name: Upload pages
      uses: actions/upload-pages-artifact@v1
      with:
        path: 'ussal-bencher/bench_ci_web_root'
    - name: Deploy pages
      uses: actions/deploy-pages@v1
